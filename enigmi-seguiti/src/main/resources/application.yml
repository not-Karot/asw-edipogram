# application.yml 
---
spring:
  application:
    name: enigmi-seguiti
  cloud:
    consul:
      host: consul
      port: 8500
      discovery:
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 45s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true
        prefer-ip-address: true
    loadbalancer:
      ribbon.enabled: false
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://enigmiseguitiservicedb:5432/enigmiSeguitiServiceDB
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  kafka:
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      bootstrap-servers: kafka:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
            type:
              mapping: EnigmaCreatedEvent:asw.edipogram.enigmiseguiti.event.EnigmaCreatedEvent, ConnessioneCreatedEvent:asw.edipogram.enigmiseguiti.event.ConnessioneCreatedEvent
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer

server:
  port: ${PORT:${SERVER_PORT:0}}
#  port: 8080

# disable OSIV
spring.jpa.open-in-view: false